server.port=8080
spring.flyway.enabled=true
spring.flyway.locations=classpath:db/migration

spring.datasource.url=jdbc:postgresql://host.minikube.internal:5432/warehouse-svc
spring.datasource.username=postgres
spring.datasource.password=password1
spring.jpa.hibernate.ddl-auto=none
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Kafka
spring.kafka.consumer.bootstrap-servers=kafka-cluster.default.svc.cluster.local:9092

# Consumer properties
topic.name.consumer=topic.orders
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.group-id=notification-svc-id
spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.consumer.properties.spring.json.use.type.headers=false
spring.kafka.consumer.properties.spring.json.value.default.type=com.mistergamarra.shopnow.warehousesvc.dto.OrderDto

# Producer properties
spring.kafka.producer.bootstrap-servers=kafka-cluster.default.svc.cluster.local:9092
topic.name.producer=topic.orders.confirmation
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer


com.shopnow.account-svc.address=account-svc.default.svc.cluster.local:8080