server.port=8080
spring.flyway.enabled=true
spring.flyway.locations=classpath:db/migration


spring.datasource.url=jdbc:postgresql://host.minikube.internal:5432/order-svc
spring.datasource.username=postgres
spring.datasource.password=password1
spring.jpa.hibernate.ddl-auto=none
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true


# Redis Config
spring.cache.type=redis
spring.data.redis.host=host.minikube.internal
spring.data.redis.port=6379
spring.data.redis.timeout=60000


com.order-svc.default-password=112233

# Kafka
spring.kafka.producer.bootstrap-servers=host.minikube.internal:9092

# Producer properties
kafka.producer.producer1.topic=topic.orders
kafka.producer.producer1.key-serializer=org.apache.kafka.common.serialization.StringSerializer
kafka.producer.producer1.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

# Second Producer properties
kafka.producer.producer2.topic=topic.orders.notification
kafka.producer.producer2.key-serializer=org.apache.kafka.common.serialization.StringSerializer
kafka.producer.producer2.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer


# Consumer properties
topic.name.consumer=topic.orders.confirmation
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.consumer.group-id=order-svc
spring.kafka.consumer.properties.spring.json.use.type.headers=false
spring.kafka.consumer.properties.spring.json.value.default.type=com.mistergamarra.shopnow.ordersvc.dto.WarehouseConfirmationDto


# Common Kafka Properties
auto.create.topics.enable=true